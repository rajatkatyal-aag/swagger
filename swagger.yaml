openapi: 3.1.0
info:
  title: Dummy E-commerce API
  version: 1.0.0
  description: A minimal API spec for demo purposesâ€”covers auth, products, cart, and orders.

servers:
  - url: https://api.example.com/v1
    description: Production server
  - url: https://dev.api.example.com/v1
    description: Development server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Product:
      type: object
      required:
        - id
        - name
        - price
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        name:
          type: string
          example: "Sample Product"
        price:
          type: number
          format: float
          example: 19.99
        description:
          type: string
          example: "A short product description."
    CartItem:
      type: object
      required:
        - productId
        - quantity
      properties:
        productId:
          type: string
          format: uuid
        quantity:
          type: integer
          minimum: 1
    Order:
      type: object
      required:
        - id
        - items
        - totalAmount
      properties:
        id:
          type: string
          format: uuid
          example: "ord-789e4567-e89b-12d3-a456-426614174000"
        items:
          type: array
          items:
            $ref: "#/components/schemas/CartItem"
        totalAmount:
          type: number
          format: float
          example: 39.98

paths:
  /auth/login:
    post:
      summary: Login to get an access token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Unauthorized

  /products:
    get:
      summary: List all products
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"

  /cart:
    get:
      summary: Retrieve current user's cart
      security:
        - BearerAuth: []
      responses:
        '200':
          description: User's cart items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CartItem"

    post:
      summary: Add an item to the cart
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CartItem"
      responses:
        '200':
          description: Item added

  /orders:
    post:
      summary: Create a new order
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
      responses:
        '201':
          description: Order created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
    get:
      summary: List past orders
      security:
        - BearerAuth: []
      responses:
        '200':
          description: A list of past orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Order"

